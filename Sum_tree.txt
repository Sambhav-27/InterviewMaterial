bool find(Node *root, int *sum){
    if(!root){
        *sum=0; return 1;
    }
    if(!root->left && !root->right){
        *sum=root->data;
        return 1;
    }
    
    int ls=0,rs=0;
    bool x= find(root->left, &ls);
    bool y= find(root->right, &rs);
    
    (*sum)= ls+rs+root->data;
    return (x && y && (root->data==ls+rs));
}
bool isSumTree(Node* root)
{
    int sum=0;
     return find(root, &sum);
}


//////////////
height balanced tree

bool find(Node *root, int *h){
    if(!root){
        *h=0;
        return 1;
    }
    if(!root->left && !root->right){
        *h=1;
        return 1;
    }
    int lh=0,rh=0;
    bool x=find(root->left, &lh);
    bool y=find(root->right, &rh);
    
    *h= 1+max(lh, rh);
    
    return (abs(lh-rh) <2);
}
bool isBalanced(Node *root)
{
    int h=0;
    return find(root, &h);
}
