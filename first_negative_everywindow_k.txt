// http://www.geeksforgeeks.org/first-negative-integer-every-window-size-k/
// O(n); o/p is 0 if window doesn't have -ve no
// in a deque put all -ve numbers of first window
// for next window remove all no. out of range
// ans for cur window is in front of q

#include<bits/stdc++.h>
using namespace std;
#define N 100005
int main(){
    int i,j,k,t,n,a[N];
    cin>>t;
    while(t--){
        cin>>n;
        for(i=0;i<n;++i)
        cin>>a[i];
        cin>>k;
        
        deque<int> q; // stores index of -ve ele
        for(i=0;i<k;++i)
        if(a[i] <0)
        q.push_back(i);
        
        if(q.empty())
        cout<<"0 ";
        else
        cout<<a[q.front()]<<" ";
        
        for(i=1;i<n;++i){
            j= i+k-1;
            if(j>=n) break;
            
            while(!q.empty() && q.front()<i) 	// you can replace while with if
            q.pop_front();
            
            if(a[j] <0)
            q.push_back(j);
            
            if(q.empty())
            cout<<"0 ";
            else
            cout<<a[q.front()]<<" ";
        }
        cout<<"\n";
        
    }
	
	return 0;
}
