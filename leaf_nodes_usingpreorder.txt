// BST

#include <iostream>
using namespace std;
#define N 10005
// can be made O(nlogn) using binary search
int search(int *a, int val , int s, int e){
    for(int i=s;i<=e;++i)
    if(a[i]>val)
    return i;
    return -1;
}
void find(int *a, int start, int end){
    if(start>end) return;
    if(start==end){
        cout<<a[start]<<" ";
        return;
    }
    int k=search(a, a[start], start, end);
    if(k==-1){  // when there is no right child(i.e. no greater element on right)
        find(a, start+1, end);
    }
    else{
        find(a, start+1, k-1);
        find(a, k, end);   
    }
    
}
int main() {
	
	int t,n,i,j,k,ans,a[N];
	cin>>t;
	while(t--){
	    cin>>n;
	    for(i=0;i<n;++i)
	    cin>>a[i];
	    
	   find(a, 0, n-1);
	   cout<<"\n";
	}
	return 0;
}
