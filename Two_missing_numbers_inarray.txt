// in array every no. is repeated except two, find them
// find xor of all numbers. xor will be a^b. Repeated ele will nullify
// in the xor find any set bit(say r), this bit will be set in 1 no. and reset in other
// again take the xor of array. if rth bit in a[i] i set the xor with first no. else 2nd no
// all repeated no.s will be go to same group and hence will nullify. Thus we will have two no.s
#include<bits/stdc++.h>
using namespace std;
#define N 100005
int main()
{
	int i,j,k,t,n,a[N],ans1,ans2;
	cin>>t;
	while(t--){
	    cin>>n;
	    for(i=0; i<n; ++i)
	    cin>>a[i];
	    
	    int x=0;
	    for(i=0; i<n; ++i)
	    x^= a[i];
	    
	    int r= x & ~(x-1); // gives a no. with only 1 set bit which is rightmost in x
	    
	    ans1=ans2=0;
	    for(i=0; i<n; ++i){
	        if(a[i]&r)
	        ans1^=a[i];
	        else
	        ans2^=a[i];
	    }
	    cout<<min(ans1, ans2)<<" "<<max(ans1, ans2)<<"\n";
	    
	}
	return 0;
}
