// each number can be used multiple times

// http://practice.geeksforgeeks.org/problems/combination-sum/0

#include<bits/stdc++.h>
using namespace std;
#define N 15
void print(vector<int> &v){
    cout<<"(";
    for(int i=0;i<v.size()-1;++i)
    cout<<v[i]<<" ";
    cout<<v[v.size()-1];
    cout<<")";
}
bool flag;
void find(vector<int>&a, vector<int>&ans, int i, int n, int k, int sum){
    if(sum>k) return;
    if(sum==k){
        flag=1;
        print(ans); return;
    }
    
    for(int j=i;j<n;++j){
        ans.push_back(a[j]);
        sum+=a[j];
        find(a, ans, j, n, k, sum);  // note the j here
        
        ans.pop_back();
        sum-=a[j];
    }
}
int main(){
    int i,j,k,t,n,a[N];
    cin>>t;
    while(t--){
        cin>>n;
        flag=0;
        vector<int> input;
        for(i=0;i<n;++i){
            cin>>a[i];
        }
        cin>>k;
        sort(a, a+n);
        
        input.push_back(a[0]);
        for(i=1; i<n;++i){ // remove duplicates
            if(a[i]!=a[i-1])
            input.push_back(a[i]);
        }
       
        
        vector<int> ans;
        i=0; int sum=0;
        find(input,ans,i,input.size(),k, sum);
        if(!flag)
        cout<<"Empty";
        cout<<"\n";
        
    }
	
	return 0;
}

////////////////////////////////////

// without duplicates allowed
// http://practice.geeksforgeeks.org/problems/combination-sum-part-2/0

#include<bits/stdc++.h>
using namespace std;
#define N 15
set<vector<int> > s;
void print(){
    set<vector<int> >::iterator it;
    for(it=s.begin();it!=s.end();++it){
        vector<int> v= *it;
        cout<<"(";
        for(int i=0;i<v.size()-1;++i)
        cout<<v[i]<<" ";
        cout<<v[v.size()-1];
        cout<<")";
    }
}
bool flag;
void find(int *a, vector<int>&ans, int i, int n, int k, int sum){
    if(sum>k) return;
    if(sum==k){
        flag=1;
        //print(ans); return;
        s.insert(ans); return;
    }
    
    
    for(int j=i;j<n;++j){
        ans.push_back(a[j]);
        sum+=a[j];
        find(a, ans, j+1, n, k, sum);
        
        ans.pop_back();
        sum-=a[j];
    }
}
int main(){
    int i,j,k,t,n,a[N];
    cin>>t;
    while(t--){
        cin>>n;
        flag=0;
        s.clear();
        vector<int> input;
        for(i=0;i<n;++i){
            cin>>a[i];
        }
        cin>>k;
        sort(a, a+n);
        
        input.push_back(a[0]);
        for(i=1; i<n;++i){ // remove duplicates
            if(a[i]!=a[i-1])
            input.push_back(a[i]);
        }
       
        
        vector<int> ans;
        i=0; int sum=0;
        find(a,ans,i,n,k, sum);
        print();
        if(!flag)
        cout<<"Empty";
        cout<<"\n";
        
    }
	
	return 0;
}
