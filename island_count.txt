#include <iostream>
#define pii pair<int, int>
#define f first
#define s second
#define N 15
using namespace std;
string s[100];
bool visited[100][100];
int n, m;
bool safe(int i, int j){
    if ( i>=0 && i<n && j>=0 && j<m)
    return (!visited[i][j] && s[i][j]=='X');  // don't combine it with if.it will lead to sigsegv
}

void dfs(int i, int j){
    visited[i][j]=1;
    
    if(safe(i+1, j))
    dfs(i+1, j);
    if(safe(i-1,j))
    dfs(i-1, j);
    if(safe(i,j+1))
    dfs(i, j+1);
    if(safe(i, j-1))
    dfs(i, j-1);
}

int fins(string s[], int n, int m){
    int i,j,k,ans=0;
    for(i=0;i<n;++i)
    for(j=0;j<m;++j)
    visited[i][j]=0;
    for(i=0;i<n;++i){
        for(j=0;j<m;++j){
            if(!visited[i][j] && s[i][j]=='X'){
                dfs(i, j);
                ans++;
            }
           
        }
    }
    return ans;
}
int main() {
	
	int i,j,t;
	
	cin>>t;
	while(t--){
	    cin>>n>>m;
	    for(i=0;i<n;++i)
	    cin>>s[i];
	    
	    cout<<fins(s, n, m)<<"\n";
	}
	return 0;
}

