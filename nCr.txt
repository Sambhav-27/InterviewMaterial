#include<bits/stdc++.h>
using namespace std;
#define lld long long
#define mod 1000 *1000*1000+7
#define N 1000

//C(n, k) = C(n-1, k-1) + C(n-1, k)
 //  C(n, 0) = C(n, n) = 1
lld M(lld a){
    if(a>mod)
    a%=mod;
    return a;
}
int dp[N][N]={0};
void find(){
    int i,j;
    
    for(i=0;i<N;++i)
    dp[i][0]=1;
    for(i=1;i<N;++i){
        for(j=1;j<N;++j){
            if(j==i)
            dp[i][j]=1;
            else if(j<i)
            dp[i][j]=dp[i-1][j-1]+dp[i-1][j];
            else
            dp[i][j]=0;
            
            dp[i][j]=M(dp[i][j]);
        }
    }
}
int main()
 {
     lld t,i,j,k,n,r;
     cin>>t;
     find();
     while(t--){
         cin>>n>>k;
         bool flag=0;
         if(k>n) flag=1;
        if(k>n-k)
        k=n-k;
        
        
        if(flag)
        cout<<"0\n";
        else
         cout<<dp[n][k]<<"\n";
     }
	
	return 0;
}

/////////////////////////////////

//pasacl

#include<bits/stdc++.h>
using namespace std;
#define lld long long
#define mod 1000 *1000*1000+7
#define N 1000

//C(n, k) = C(n-1, k-1) + C(n-1, k)
 //  C(n, 0) = C(n, n) = 1
 
 // pasacal's triangle also uses the same table
 // space can be made O(n) , if we want just a single row
 
 
 
lld M(lld a){
    if(a>mod)
    a%=mod;
    return a;
}
int dp[N][N]={0};
void find(){
    int i,j;
    
    for(i=0;i<N;++i)
    dp[i][0]=1;
    for(i=1;i<N;++i){
        for(j=1;j<N;++j){
            if(j==i)
            dp[i][j]=1;
            else if(j<i)
            dp[i][j]=dp[i-1][j-1]+dp[i-1][j];
            else
            dp[i][j]=0;
            
            dp[i][j]=M(dp[i][j]);
        }
    }
}
int main()
 {
     lld t,i,j,k,n,r;
     cin>>t;
     find();
     while(t--){
         cin>>n;
     
        for(i=0;i<n;++i)
            cout<<dp[n-1][i]<<" ";
        cout<<"\n";
        
     }
	
	return 0;
}
