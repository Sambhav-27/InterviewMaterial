// wildcard matching
// ? matches any 1 char
// * matches 0 or more chars

#include<bits/stdc++.h>
using namespace std;
#define N 1005
int main(){
    int i,j,k,t,n,m;
    cin>>t;
    while(t--){
        string s,p;
        cin>>p>>s;
        
        n=s.length();  m=p.length();
        
        bool dp[N][N]={0}; // must
        dp[0][0]=1;
        
        for(i=1;i<=m;++i){
            if(p[i-1]=='*')
            dp[0][i]=dp[0][i-1];
        }
        
        for(i=1;i<=n; ++i){
            for(j=1; j<=m; ++j){
                
                if(s[i-1]==p[j-1] || p[j-1]=='?')  // if matches then check diagonal value; if patt is ? then we can have anything in string
                dp[i][j]= dp[i-1][j-1];
                
                else if(p[j-1]=='*') // either include 0 chars i.e. ignore *(left value) or cur char and may be more(top value)
                dp[i][j]= dp[i][j-1] || dp[i-1][j];
                
                else
                dp[i][j]=0;
            }
        }
        
        if(dp[n][m])
        cout<<"Yes\n";
        else
        cout<<"No\n";
        //cout<<dp[n][m]<<"\n";
    }
	
	return 0;
}