// https://stackoverflow.com/questions/69192/how-to-implement-a-queue-using-two-stacks
/*Enqueue:
Push the new element onto inbox

Dequeue:
- If outbox is empty, refill it by popping each element
from inbox and pushing it onto outbox
- Pop and return the top element from outbox

Using this method, each element will be in each
stack exactly once - meaning each element will be
pushed twice and popped twice, giving amortized 
constant time operations.*/

void StackQueue :: push(int x)
 {
        s1.push(x);
 }

/*The method pop which return the element poped out of the queue*/
int StackQueue :: pop()
{ // this takes amortized O(1) time
    int x=-1;
    if(s2.empty()){
        while(!s1.empty()){
            s2.push(s1.top());
            s1.pop();
        }
    }
    if(!s2.empty()){
        x=s2.top();
        s2.pop();
    }
    return x;
}


//////////////// below method takes O(n) time for pop
// if(s1.empty()) return -1;
    //     while(!s1.empty()){
    //         s2.push(s1.top());
    //         s1.pop();
    //     }
    //     int x=s2.top();
    //     s2.pop();
    //     while(!s2.empty()){
    //         s1.push(s2.top());
    //         s2.pop();
    //     }
    //     return x;

