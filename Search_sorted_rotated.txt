#include <iostream>
using namespace std;
#define N 100005
// all elements are distinct
// 2nd sol: find pivot element the search in left or right half accordingly
int bsearch(int *a, int b, int e, int val){
   
    while(b<=e){
        int m=(b+e)/2;
        
        if(a[m]==val) return m;
        else if(a[b]<=a[m]){ // left half is sorted
            if(a[b] <= val && val <=a[m]) // <= is necessary
            e=m-1;
            else
            b=m+1;
        }
        else{
            if(a[m] <= val && val <=a[e])
            b=m+1;
            else
            e=m-1;
        } 
        
    }
    return -1;
}

int main() {
	int t,i,j,k,n,a[N],val;
	cin>>t;
	while(t--){
	    cin>>n;
	    for(i=0;i<n;++i)
	    cin>>a[i];
	    cin>>val;
	   
	   cout<<bsearch(a, 0, n-1, val)<<"\n";
	    
	}
	return 0;
}
