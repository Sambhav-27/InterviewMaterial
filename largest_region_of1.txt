#include <bits/stdc++.h>
#define pii pair<int, int>
#define f first
#define s second
#define N 15
using namespace std;
int s[100][100];
bool visited[100][100];
int n, m,tot;
bool safe(int i, int j){
    if ( i>=0 && i<n && j>=0 && j<m)
    return (!visited[i][j] && s[i][j]==1);  // don't combine it with if.it will lead to sigsegv
    return 0;
}

int dir[8][2]={1,1, -1,-1, -1,1, 1,-1, 0,1, 1,0, -1,0, 0,-1};

void dfs(int i, int j){
    visited[i][j]=1;
    tot++;
    for(int k=0;k<8;++k){
        int x= i+dir[k][0];
        int y= j+dir[k][1];
        if(safe(x, y))
        dfs(x, y);
    }
}

int fins(int n, int m){
    int i,j,k,ans=INT_MIN;
    for(i=0;i<n;++i)
    for(j=0;j<m;++j)
    visited[i][j]=0;
    for(i=0;i<n;++i){
        for(j=0;j<m;++j){
            if(!visited[i][j] && s[i][j]==1){
                tot=0;
                dfs(i, j);
                ans=max(ans, tot);
            }
           
        }
    }
    return ans;
}
int main() {
	
	int i,j,t;
	
	cin>>t;
	while(t--){
	    cin>>n>>m;
	    for(i=0;i<n;++i){
	        for(j=0;j<m;++j)
	        cin>>s[i][j];
	    }
	    
	    
	    cout<<fins(n, m)<<"\n";
	}
	return 0;
}

