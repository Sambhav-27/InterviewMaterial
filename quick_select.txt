#include<bits/stdc++.h>
using namespace std;
// for random pivot, select a random index and exachange last element with the element at that random index and follow the same procedure
// quickselect for kth smallest number
int partition(int a[],int start,int end)
{
    int n= end-start+1;
    int pivot=rand() %n;
    swap(a[end], a[start+pivot]);
    
	int i,pindex;
	pivot=a[end];
	pindex=start;
	for(i=start;i<=end-1;++i)
	{
		if(a[i]<= pivot)
		swap(a[i],a[pindex++]);
	}
	swap(a[end],a[pindex]);
	return pindex;
}
void quicksort(int a[],int start,int end, int k)
{
	if(start>=end) return;
	
	int pindex=partition(a,start,end);
	if(pindex==k)
	return;
	else if(pindex > k)
	quicksort(a,start,pindex-1, k);
	else
	quicksort(a,pindex+1,end, k);
}
int main()
{
    srand(time(NULL));
	int i,j,k,t,n,m,a[10000];
	cin>>t;
	while(t--){
	    cin>>n;
	    for(i=0;i<n;++i)
	    cin>>a[i];
	    cin>>k;
	    
	    quicksort(a, 0, n-1, k-1); // notice k here is k-1
	   
	    cout<<a[k-1]<<"\n";
	}
	
	return 0;
}